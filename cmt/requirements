
package hltsv

manager Reiner.Hauser@cern.ch Nicoletta.Garelli@cern.ch 
# add: Ning, Chase, 

public

use TDAQPolicy

use ers
use eformat
use dynlibs
use EventStorage
use dal
use DFConfiguration
use tbb
use cmdl
use monsvc
use asyncmsg

use Boost * TDAQCExternal
use ROOT  * DQMCExternal

private

macro_append cppflags "-Wno-deprecated-declarations"

# 
# Generation of code for HLTSV configuration schema
#

use genconfig

ignore_pattern inst_headers_
ignore_pattern inst_headers_auto
ignore_pattern inst_headers_bin_auto
ignore_pattern inst_idl_auto

macro           generate-config-include-dirs            "${TDAQ_INST_PATH}/share/data/dal ${TDAQ_INST_PATH}/share/data/DFConfiguration"
document        generate-config DFdal                   -s=../schema/                     \
                                                        namespace="daq::df"               \
                                                        include="hltsvdal"                \
                                                        hltsv.schema.xml                     

macro           gdir                                    "$(bin)DFdal.tmp"

library         daq-hltsv-dal                              "$(gdir)/*.cpp"

macro daq-hltsv-dal_dependencies "DFdal"

macro_append daq-hltsv-dal_shlibflags "-ldaq-core-dal -ldaq-df-dal"

#
# A library to load the RoIB plugins
# 
library hltsv L1Source.cxx Activity.cxx EventScheduler.cxx DCMSession.cxx ROSClear.cxx ROSSession.cxx Messages.cxx HLTSVServer.cxx LVL1Result.cxx
macro hltsv_shlibflags "-lItemCtrl -lers -ltbb -leformat_write -leformat -ldaq-hltsv-dal -lmonsvc -lmonsvcpub -lmonsvc-dal -lasyncmsg -ldynlibs"

#
# The HLTSV main application
#
application hltsv_main  hltsv_main.cxx 

macro hltsv_mainlinkopts "-lhltsv"

macro hltsv_main_dependencies "daq-hltsv-dal"

macro sw.repository.binary.hltsv_main:name         "HLT Supervisor"
macro sw.repository.binary.hltsv_main:description  "HLT Supervisor Application"

#
# Plugins for L1Source implementations (aka RoIBuilder)
# 

# internal generation
library svl1internal  L1InternalSource.cxx
macro svl1internal_shlibflags "-lers"

# preload from file
library svl1preloaded L1PreloadedSource.cxx
macro svl1preloaded_shlibflags "-lers -leformat_write -leformat -lCTPfragment -lDataReader"

# read from Filar (aka RoIB hardware)
library svl1filar L1FilarSource.cxx
macro svl1filar_shlibflags "-leformat_write -leformat -lfilar -lttcpr"

macro constituents "hltsv hltsv_main svl1internal svl1preloaded svl1filar test_l1source testDCM testROS" \
       x86_64      "hltsv hltsv_main svl1internal svl1preloaded test_l1source testDCM testROS"

macro to_install "libhltsv.so libsvl1internal.so libsvl1preloaded.so libsvl1filar.so libdaq-hltsv-dal.so" \
      x86_64     "libhltsv.so libsvl1internal.so libsvl1preloaded.so libdaq-hltsv-dal.so"

#
# Test applications
#

#
# Read from L1Source and print RoI info
#

application test_l1source ../test/test_l1source.cxx
macro test_l1sourcelinkopts "-lers -lhltsv -ldynlibs"
macro test_l1source_dependencies hltsv

#
# Emulator for DCM
#
application testDCM ../test/testDCM.cxx
macro testDCMlinkopts "-lers -leformat -lac -ldcmessages -lmsginput -lmsgconf -lmsg -ldaq-df-dal -lasyncmsg "

#
# Emulator for ROS
#
application testROS ../test/testROS.cxx
macro testROSlinkopts "-lasyncmsg -lItemCtrl -lers -lcmdline -ldaq-df-dal"

macro sw.repository.binary.testDCM:name         "Tester for hltsv"
macro sw.repository.binary.testDCM:description  "Tester for hltsv"

macro sw.repository.binary.testROS:name         "Tester for hltsv"
macro sw.repository.binary.testROS:description  "Tester for hltsv"

#
# Installation
#
apply_pattern install_libs files="${to_install}"
apply_pattern install_apps files="hltsv_main test_l1source testDCM testROS"

apply_pattern   install_db_files name=schema            files="../schema/hltsv.schema.xml" \
                                                        target_dir="schema"

apply_pattern   install_data name=isschema              files="../schema/hltsv_is.schema.xml"\
							target_dir="schema"

