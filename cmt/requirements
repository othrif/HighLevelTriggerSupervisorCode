
package hltsv

manager Reiner.Hauser@cern.ch Nicoletta.Garelli@cern.ch,jls@anl.gov

public

use TDAQPolicy

use ers
use eformat
use CTPfragment
use dynlibs
use EventStorage
use dal
use DFConfiguration
use tbb
use cmdl
use monsvc
use asyncmsg
use ROSfilar
use ROSMemoryPool
use ROSCore
use ROSBufferManagement
use ROSEventFragment
use ROSUtilities
use ROSRobinNP
use ROSMemoryPoolNP
use ROSDescriptorNP
use RunControl
use TriggerCommander
use TTCInfo

use Boost * TDAQCExternal
use ROOT  * DQMCExternal

private

# 
# Generation of code for HLTSV configuration schema
#

use genconfig

ignore_pattern inst_headers_
ignore_pattern inst_headers_auto
ignore_pattern inst_headers_bin_auto
ignore_pattern inst_idl_auto

macro           generate-config-include-dirs            "${TDAQ_INST_PATH}/share/data/dal ${TDAQ_INST_PATH}/share/data/DFConfiguration ${TDAQ_INST_PATH}/share/data/monsvc.dal"
document        generate-config DFdal                   -s=../schema/                     \
                                                        namespace="daq::df"               \
                                                        include="DFdal" \
                                                        hltsv.schema.xml                     

macro           gdir                                    "$(bin)DFdal.tmp"

library         daq-hltsv-dal                              "$(gdir)/*.cpp $(gdir)/*.cxx"

macro daq-hltsv-dal_dependencies "DFdal"

macro_append daq-hltsv-dal_shlibflags "-lmonsvc-dal -ldaq-core-dal -ldaq-df-dal"

#
# Main HLTSV library
# 
library hltsv L1Source.cxx Activity.cxx EventScheduler.cxx DCMSession.cxx ROSClear.cxx UnicastROSClear.cxx MulticastROSClear.cxx ROSSession.cxx HLTSVServer.cxx LVL1Result.cxx UpdateMessage.cxx ProcessMessage.cxx ClearMessage.cxx
macro hltsv_shlibflags "-ltrgCommander -lrc_ItemCtrl -lers -ltbb -leformat_write -leformat -ldaq-hltsv-dal -lmonsvc -lmonsvcpub -lmonsvc-dal -lasyncmsg -ldynlibs"

# this does not work in a nightly build:
macro hltsv_dependencies "daq-hltsv-dal"

#
# The HLTSV main application
#
application hltsv_main  hltsv_main.cxx 

macro hltsv_mainlinkopts "-lhltsv -ldaq-hltsv-dal"

macro hltsv_main_dependencies "daq-hltsv-dal hltsv"

macro sw.repository.binary.hltsv_main:name         "HLT Supervisor"
macro sw.repository.binary.hltsv_main:description  "HLT Supervisor Application"

#
# Plugins for L1Source implementations (aka RoIBuilder)
# 

# internal generation
library svl1internal  L1InternalSource.cxx
macro svl1internal_shlibflags "-lers"
macro svl1internal_dependencies "daq-hltsv-dal"

# preload from file
library svl1preloaded L1PreloadedSource.cxx
macro svl1preloaded_shlibflags "-lers -leformat_write -leformat -lCTPfragment -lDataReader"
macro svl1preloaded_dependencies "daq-hltsv-dal"

# read from Filar (aka RoIB hardware)
library svl1filar L1FilarSource.cxx
macro svl1filar_shlibflags "-leformat_write -leformat -lfilar -lROSMemoryPool"
macro svl1filar_dependencies "daq-hltsv-dal"

# read from RobinNP (aka RoIB software)
library svl1robinnp L1RobinnpSource.cxx RoIBuilder.cxx RoIBuilder.h
macro svl1robinnp_shlibflags "-leformat_write -leformat \
      -lROSRobinNPReadoutModule -lROSCore -lROSUserActionScheduler \
      -lrobinNP -lrobinNP_rol \
      -lrobinNP_BIST -lrobinNP_monitoring -lNPDescriptor \
      -lROSMemoryPoolNP \
      -lROSMemoryPool"
macro svl1robinnp_dependencies "daq-hltsv-dal"

# read from TTC2LAN
library svl1ttc2lan L1TTC2LANSource.cxx
macro svl1ttc2lan_shlibflags "-leformat_write -leformat -lasyncmsg"
macro svl1ttc2lan_dependencies "daq-hltsv-dal"

macro constituents "hltsv hltsv_main svl1internal svl1preloaded svl1ttc2lan test_l1source testDCM testROS testTTC2LAN svl1robinnp" \
      i686 "hltsv hltsv_main svl1internal svl1preloaded svl1filar svl1ttc2lan test_l1source testDCM testROS testTTC2LAN"

macro to_install "libhltsv.so libsvl1internal.so libsvl1preloaded.so libsvl1ttc2lan.so libsvl1robinnp.so libdaq-hltsv-dal.so" \
      i686 "libhltsv.so libsvl1internal.so libsvl1preloaded.so libsvl1filar.so libsvl1ttc2lan.so libdaq-hltsv-dal.so" 

#
# Test applications
#

#
# Read from L1Source and print RoI info
#

application test_l1source ../test/test_l1source.cxx
macro test_l1sourcelinkopts "-lhltsv -ldaq-hltsv-dal -lers -ldynlibs"
macro test_l1source_dependencies hltsv

#
# Emulator for DCM
#
application testDCM ../test/testDCM.cxx ../test/HLTSVSession.cxx ../test/DCMMessages.cxx
macro testDCMlinkopts "-lrc_ItemCtrl -lers -leformat -ldaq-hltsv-dal -lmonsvc-dal -ldaq-df-dal -lasyncmsg -ltbb"
macro testDCM_dependencies "daq-hltsv-dal"

#
# Emulator for ROS
#
application testROS ../test/testROS.cxx
macro testROSlinkopts "-lasyncmsg -lrc_ItemCtrl -lers -lcmdline -ldaq-df-dal"
macro testROS_dependencies "daq-hltsv-dal"


#
# Emulator for TTC2LAN
# 
application testTTC2LAN ../test/testTTC2LAN.cxx
macro testTTC2LANlinkopts "-lasyncmsg -lrc_ItemCtrl -lers -lcmdline -ldaq-df-dal"

macro sw.repository.binary.testDCM:name         "Tester for hltsv"
macro sw.repository.binary.testDCM:description  "Tester for hltsv"

macro sw.repository.binary.testROS:name         "Tester for hltsv"
macro sw.repository.binary.testROS:description  "Tester for hltsv"

macro sw.repository.binary.testTTC2LAN:name         "TTC2LAN Tester for hltsv"
macro sw.repository.binary.testTTC2LAN:description  "TTC2LAN Tester for hltsv"

#
# Installation
#
apply_pattern install_libs files="${to_install}"
apply_pattern install_apps files="hltsv_main test_l1source testDCM testROS testTTC2LAN"

apply_pattern   install_db_files name=schema            files="../schema/hltsv.schema.xml" \
                                                        target_dir="schema"

apply_pattern   install_data name=isschema              files="../schema/hltsv_is.schema.xml"\
							target_dir="schema"

apply_pattern   install_headers name=dalheaders         src_dir="$(bin)/DFdal"            \
                                                        files="*.h"                  \
                                                        target_dir="../DFdal/"

macro sw.repository.is-info-file.share/data/hltsv/schema/hltsv_is.schema.xml:name "HLTSV IS xml description"
